[{"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\authForm.jsx":"1","C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\auth.jsx":"2","C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\App.jsx":"3","C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\NweetFactory.jsx":"4","C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\home.jsx":"5","C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\profile.jsx":"6","C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\nweet.jsx":"7","C:\\0React\\Study\\react-basic\\owls_chat\\src\\firebase.js":"8","C:\\0React\\Study\\react-basic\\owls_chat\\src\\index.js":"9","C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\navigation.jsx":"10"},{"size":2072,"mtime":1613036447580,"results":"11","hashOfConfig":"12"},{"size":1455,"mtime":1613040194718,"results":"13","hashOfConfig":"12"},{"size":1098,"mtime":1613040015825,"results":"14","hashOfConfig":"12"},{"size":3151,"mtime":1613038264958,"results":"15","hashOfConfig":"12"},{"size":976,"mtime":1613040234218,"results":"16","hashOfConfig":"12"},{"size":1521,"mtime":1612518279608,"results":"17","hashOfConfig":"12"},{"size":2470,"mtime":1612518701119,"results":"18","hashOfConfig":"12"},{"size":730,"mtime":1613038513394,"results":"19","hashOfConfig":"12"},{"size":230,"mtime":1613038579490,"results":"20","hashOfConfig":"12"},{"size":1292,"mtime":1612512472099,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"18m48jz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\authForm.jsx",["44"],"import React, { useState } from 'react';\r\nimport { authService } from '../firebase';\r\nconst AutoForm = () => {\r\n    const [email ,setEmail] = useState(\"\");\r\n    const [password ,setPassword] = useState(\"\");\r\n    const [newAccount , setNewAccount] = useState(true);\r\n    const [error , setError] = useState(\"\");\r\n\r\n    const onChange = (event) =>{\r\n        const {target : {name , value}} = event;\r\n \r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n     };\r\n     const onSubmit = async(event) =>{\r\n         event.preventDefault();\r\n         try{\r\n             let data;\r\n             if(newAccount){\r\n                 data = authService.createUserWithEmailAndPassword(\r\n                     email,password\r\n                 )\r\n             }else{\r\n                 data =  await authService.signInWithEmailAndPassword( \r\n                    email , password)\r\n             }\r\n         }catch(error){\r\n             setError(error.message);\r\n         }\r\n         \r\n     };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n        name=\"email\"\r\n        type=\"email\" \r\n        placeholder=\"Email\" \r\n        required \r\n        value={email} \r\n        onChange={onChange}\r\n        className=\"authInput\"\r\n        />\r\n        \r\n        <input \r\n        name=\"password\"\r\n        type=\"password\" \r\n        placeholder=\"Password\" \r\n        required \r\n        value={password}  \r\n        onChange={onChange}\r\n        className=\"authInput\" \r\n        />\r\n        <input \r\n        type=\"submit\" \r\n        value={newAccount ? \"Create Account\" : \"Login\"}\r\n        className=\"authInput authSubmit\"\r\n         />\r\n         {error && <span className=\"authError\">{error}</span>}\r\n     </form>\r\n     <span onClick={toggleAccount} className=\"authSwitch\">\r\n         {newAccount ? \"Sign In \" : \"Create Account\" }\r\n     </span>  \r\n     </> \r\n    );\r\n};\r\n\r\nexport default AutoForm;","C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\auth.jsx",[],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\App.jsx",["45"],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\NweetFactory.jsx",["46"],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\home.jsx",[],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\profile.jsx",["47"],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\nweet.jsx",["48"],"import {  storageService } from '../firebase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService }  from \"../firebase\"\r\nconst Nweet = ({nweetObj , isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet , setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async() =>{\r\n        const ok = window.confirm(\"Are you sure You Want to Delete this Tweet?\");\r\n        if(ok){\r\n          await dbService.doc(`owls/${nweetObj.id}`).delete();\r\n          await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }; \r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async event =>{\r\n        event.preventDefault();\r\n        await dbService.doc(`owls/${nweetObj.id}`).update({\r\n            text : newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = event => {\r\n        const{\r\n            target : {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n      <div className=\"nweet\">\r\n          {editing ? (\r\n            <>\r\n               <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newNweet}\r\n                  placeholder=\"Edit your tweet\"\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h4>{nweetObj.text}</h4>\r\n              {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n              {isOwner && (\r\n                  <div class=\"nweet__actions\">\r\n                  <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </span>\r\n                  <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n    };\r\n\r\nexport default Nweet;","C:\\0React\\Study\\react-basic\\owls_chat\\src\\firebase.js",[],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\index.js",[],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\navigation.jsx",[],{"ruleId":"49","severity":1,"message":"50","line":27,"column":18,"nodeType":"51","messageId":"52","endLine":27,"endColumn":22},{"ruleId":null,"fatal":true,"severity":2,"message":"53","line":34,"column":24},{"ruleId":"54","severity":1,"message":"55","line":83,"column":15,"nodeType":"56","endLine":88,"endColumn":17},{"ruleId":"49","severity":1,"message":"57","line":2,"column":17,"nodeType":"51","messageId":"52","endLine":2,"endColumn":26},{"ruleId":"54","severity":1,"message":"55","line":53,"column":42,"nodeType":"56","endLine":53,"endColumn":78},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","Parsing error: Unexpected token, expected \",\"\n\n  32 | \n  33 |   return (\n> 34 |     console.log('home');\n     |                        ^\n  35 |     <>\n  36 |       {init ? <AppRouter \n  37 |       refreshUser={refreshUser}","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used."]