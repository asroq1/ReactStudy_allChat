[{"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\authForm.jsx":"1","C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\auth.jsx":"2","C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\App.jsx":"3","C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\NweetFactory.jsx":"4","C:\\0React\\Study\\react-basic\\owls_chat\\src\\firebase.jsx":"5","C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\home.jsx":"6","C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\profile.jsx":"7","C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\nweet.jsx":"8","C:\\0React\\Study\\react-basic\\owls_chat\\src\\index.jsx":"9"},{"size":2072,"mtime":1612512390620,"results":"10","hashOfConfig":"11"},{"size":1437,"mtime":1612514227131,"results":"12","hashOfConfig":"11"},{"size":1073,"mtime":1612508232108,"results":"13","hashOfConfig":"11"},{"size":3151,"mtime":1612518711951,"results":"14","hashOfConfig":"11"},{"size":730,"mtime":1612518657905,"results":"15","hashOfConfig":"11"},{"size":948,"mtime":1612759859759,"results":"16","hashOfConfig":"11"},{"size":1521,"mtime":1612518279608,"results":"17","hashOfConfig":"11"},{"size":2470,"mtime":1612518701119,"results":"18","hashOfConfig":"11"},{"size":311,"mtime":1612596567651,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"18m48jz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\authForm.jsx",["40"],"import React, { useState } from 'react';\r\nimport { authService } from '../firebase';\r\nconst AutoForm = () => {\r\n    const [email ,setEmail] = useState(\"\");\r\n    const [password ,setPassword] = useState(\"\");\r\n    const [newAccount , setNewAccount] = useState(true);\r\n    const [error , setError] = useState(\"\");\r\n\r\n    const onChange = (event) =>{\r\n        const {target : {name , value}} = event;\r\n \r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n     };\r\n     const onSubmit = async(event) =>{\r\n         event.preventDefault();\r\n         try{\r\n             let data;\r\n             if(newAccount){\r\n                 data = authService.createUserWithEmailAndPassword(\r\n                     email,password\r\n                 )\r\n             }else{\r\n                 data =  await authService.signInWithEmailAndPassword( \r\n                    email , password)\r\n             }\r\n         }catch(error){\r\n             setError(error.message);\r\n         }\r\n         \r\n     };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n        name=\"email\"\r\n        type=\"email\" \r\n        placeholder=\"Email\" \r\n        required \r\n        value={email} \r\n        onChange={onChange}\r\n        className=\"authInput\"\r\n        />\r\n        \r\n        <input \r\n        name=\"password\"\r\n        type=\"password\" \r\n        placeholder=\"Password\" \r\n        required \r\n        value={password}  \r\n        onChange={onChange}\r\n        className=\"authInput\" \r\n        />\r\n        <input \r\n        type=\"submit\" \r\n        value={newAccount ? \"Create Account\" : \"Login\"}\r\n        className=\"authInput authSubmit\"\r\n         />\r\n         {error && <span className=\"authError\">{error}</span>}\r\n     </form>\r\n     <span onClick={toggleAccount} className=\"authSwitch\">\r\n         {newAccount ? \"Sign In \" : \"Create Account\" }\r\n     </span>  \r\n     </> \r\n    );\r\n};\r\n\r\nexport default AutoForm;","C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\auth.jsx",["41"],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\App.jsx",[],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\NweetFactory.jsx",["42"],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\firebase.jsx",[],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\home.jsx",[],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\routes\\profile.jsx",["43"],"C:\\0React\\Study\\react-basic\\owls_chat\\src\\components\\nweet.jsx",["44"],"import {  storageService } from '../firebase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService }  from \"../firebase\"\r\nconst Nweet = ({nweetObj , isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet , setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async() =>{\r\n        const ok = window.confirm(\"Are you sure You Want to Delete this Tweet?\");\r\n        if(ok){\r\n          await dbService.doc(`owls/${nweetObj.id}`).delete();\r\n          await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }; \r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async event =>{\r\n        event.preventDefault();\r\n        await dbService.doc(`owls/${nweetObj.id}`).update({\r\n            text : newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = event => {\r\n        const{\r\n            target : {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n      <div className=\"nweet\">\r\n          {editing ? (\r\n            <>\r\n               <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newNweet}\r\n                  placeholder=\"Edit your tweet\"\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h4>{nweetObj.text}</h4>\r\n              {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n              {isOwner && (\r\n                  <div class=\"nweet__actions\">\r\n                  <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </span>\r\n                  <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n    };\r\n\r\nexport default Nweet;","C:\\0React\\Study\\react-basic\\owls_chat\\src\\index.jsx",[],{"ruleId":"45","severity":1,"message":"46","line":27,"column":18,"nodeType":"47","messageId":"48","endLine":27,"endColumn":22},{"ruleId":"45","severity":1,"message":"46","line":21,"column":14,"nodeType":"47","messageId":"48","endLine":21,"endColumn":18},{"ruleId":"49","severity":1,"message":"50","line":83,"column":15,"nodeType":"51","endLine":88,"endColumn":17},{"ruleId":"45","severity":1,"message":"52","line":2,"column":17,"nodeType":"47","messageId":"48","endLine":2,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":53,"column":42,"nodeType":"51","endLine":53,"endColumn":78},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used."]