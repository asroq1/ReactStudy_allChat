{"version":3,"sources":["firebase.jsx","components/authForm.jsx","routes/auth.jsx","components/nweet.jsx","components/NweetFactory.jsx","routes/home.jsx","routes/profile.jsx","components/navigation.jsx","components/router.js","components/App.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AutoForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6968f87.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId:process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\n   // Initi alize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const firebaseInstance = firebase; \r\n  \r\n  export const authService = firebase.auth();\r\n\r\n  export const dbService = firebase.firestore();\r\n\r\n  export const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from '../firebase';\r\nconst AutoForm = () => {\r\n    const [email ,setEmail] = useState(\"\");\r\n    const [password ,setPassword] = useState(\"\");\r\n    const [newAccount , setNewAccount] = useState(true);\r\n    const [error , setError] = useState(\"\");\r\n\r\n    const onChange = (event) =>{\r\n        const {target : {name , value}} = event;\r\n \r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n     };\r\n     const onSubmit = async(event) =>{\r\n         event.preventDefault();\r\n         try{\r\n             let data;\r\n             if(newAccount){\r\n                 data = authService.createUserWithEmailAndPassword(\r\n                     email,password\r\n                 )\r\n             }else{\r\n                 data =  await authService.signInWithEmailAndPassword( \r\n                    email , password)\r\n             }\r\n         }catch(error){\r\n             setError(error.message);\r\n         }\r\n         \r\n     };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n        name=\"email\"\r\n        type=\"email\" \r\n        placeholder=\"Email\" \r\n        required \r\n        value={email} \r\n        onChange={onChange}\r\n        className=\"authInput\"\r\n        />\r\n        \r\n        <input \r\n        name=\"password\"\r\n        type=\"password\" \r\n        placeholder=\"Password\" \r\n        required \r\n        value={password}  \r\n        onChange={onChange}\r\n        className=\"authInput\" \r\n        />\r\n        <input \r\n        type=\"submit\" \r\n        value={newAccount ? \"Create Account\" : \"Login\"}\r\n        className=\"authInput authSubmit\"\r\n         />\r\n         {error && <span className=\"authError\">{error}</span>}\r\n     </form>\r\n     <span onClick={toggleAccount} className=\"authSwitch\">\r\n         {newAccount ? \"Sign In \" : \"Create Account\" }\r\n     </span>  \r\n     </> \r\n    );\r\n};\r\n\r\nexport default AutoForm;","\r\nimport React from 'react';\r\nimport { firebaseInstance, authService } from '../firebase';\r\nimport AutoForm from 'components/authForm';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nconst Auth = () => {\r\n    const onSocialClick =  async(event) =>{\r\n        const {target : {name} } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n            \r\n        }else if (name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();   \r\n        }\r\n       const data = await authService.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faTwitter}\r\n          color={\"#04AAFF\"}\r\n          size=\"3x\"\r\n          style={{ marginBottom: 30 }}\r\n        />\r\n            <AutoForm />            \r\n            <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n          </button>\r\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n          </button>\r\n        </div>\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default Auth;","import {  storageService } from '../firebase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService }  from \"../firebase\"\r\nconst Nweet = ({nweetObj , isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet , setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async() =>{\r\n        const ok = window.confirm(\"Are you sure You Want to Delete this Tweet?\");\r\n        if(ok){\r\n          await dbService.doc(`owls/${nweetObj.id}`).delete();\r\n          await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }; \r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async event =>{\r\n        event.preventDefault();\r\n        await dbService.doc(`owls/${nweetObj.id}`).update({\r\n            text : newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = event => {\r\n        const{\r\n            target : {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n      <div className=\"nweet\">\r\n          {editing ? (\r\n            <>\r\n               <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newNweet}\r\n                  placeholder=\"Edit your tweet\"\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h4>{nweetObj.text}</h4>\r\n              {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n              {isOwner && (\r\n                  <div class=\"nweet__actions\">\r\n                  <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </span>\r\n                  <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n    };\r\n\r\nexport default Nweet;","import { dbService }  from \"../firebase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService} from \"../firebase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n      return;\r\n    } \r\n      event.preventDefault();\r\n      let attachmentUrl = \"\";\r\n      if (attachment !== \"\") {\r\n        const attachmentRef = storageService\r\n          .ref()\r\n          .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n      }\r\n      const nweetObj = {\r\n        text: nweet,\r\n        createAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentUrl,\r\n      };\r\n      await dbService.collection(\"owls\").add(nweetObj);\r\n      setNweet(\"\");\r\n      setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n      const {\r\n        target: { value },\r\n      } = event;\r\n      setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n      const {\r\n        target: { files },\r\n      } = event;\r\n      const theFile = files[0];\r\n      const reader = new FileReader();\r\n      reader.onloadend = (finishedEvent) => {\r\n        const {\r\n          currentTarget: { result },\r\n        } = finishedEvent;\r\n        setAttachment(result);\r\n      };\r\n      reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n          <div className=\"factoryInput__container\">\r\n            <input\r\n              className=\"factoryInput__input\"\r\n              value={nweet}\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              placeholder=\"What's on your mind?\"\r\n              maxLength={120}\r\n            />\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n          </div>\r\n          <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </label>\r\n          <input\r\n            id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n              opacity: 0,\r\n            }}\r\n          />\r\n          {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n              <img\r\n                src={attachment}\r\n                style={{\r\n                  backgroundImage: attachment,\r\n                }}\r\n              />\r\n              <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                <span>Remove</span>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </form>\r\n      );\r\n    };\r\n  export default NweetFactory;\r\n","import  {dbService }  from '../firebase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Nweet from 'components/nweet';\r\nimport NweetFactory from '../components/NweetFactory';\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets , setNweets] = useState([]);\r\n   \r\n    useEffect (() =>{\r\n      dbService.collection(\"owls\").onSnapshot(snapshot => {\r\n        const nweetArray = snapshot.docs.map (doc => ({\r\n          id :doc.id , \r\n          ...doc.data(),\r\n        }));\r\n          setNweets(nweetArray);\r\n      })\r\n       }, []);\r\n    \r\n    return(\r\n      <div className=\"container\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div style={{ marginTop: 30 }}>\r\n           {nweets.map((nweet) => (\r\n             <Nweet \r\n             key={nweet.id} \r\n             nweetObj={nweet} \r\n             isOwner={nweet.creatorId === userObj.uid} />\r\n  \r\n            ))}\r\n       </div>\r\n       </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Home;","import { authService} from '../firebase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser ,userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n      authService.signOut();\r\n\r\n      history.push(\"/\");\r\n    };\r\n\r\n      const onSubmit = async event =>{\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName ){\r\n            await userObj.updateProfile({\r\n            displayName : newDisplayName,\r\n          }); \r\n          refreshUser();\r\n        }\r\n      }\r\n      const onChange = event =>{\r\n        const{\r\n          target : {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n      }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n          <input \r\n           autoFocus\r\n          onChange={onChange} \r\n          type=\"text\" \r\n          placeholder=\"Display Name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n          />\r\n           <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n          />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n         Log Out\r\n        </span>\r\n    </div>\r\n    );\r\n  };\r\n\r\n  export default Profile;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ( { userObj  }) => {\r\n    return (\r\n        <nav>\r\n             <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n               <li>\r\n                        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                        </Link> \r\n               </li>\r\n               <li>\r\n               <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link> \r\n               </li>\r\n           </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","\r\nimport {HashRouter as Router, Route , Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/auth\";\r\nimport Home from \"../routes/home\";\r\nimport Profile from \"../routes/profile\";\r\nimport Navigation from \"./navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/router\";\nimport { authService } from \"../firebase\";\n\nfunction App() {\n  const [init , setInit] = useState(false); \n  const [userObj, setUserObj]= useState(null);\n\n   useEffect(() =>{\n     authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName : user.displayName,\n          uid : user.id,\n          updateProfile : (args) => user.updateProfile(args),\n        });\n     }else{\n       setUserObj( null );\n     }\n     setInit(true);\n     });\n   }, []);\n\n   const refreshUser = () =>{\n     const user = authService.currentUser;\n     setUserObj({\n       displayName : user.displayName, \n       uid : user.uid,\n       updateProfile : (args) => user.updateProfile(args),\n     });\n   };\n\n  return (\n    <>\n      {init ? <AppRouter \n      refreshUser={refreshUser}\n      isLoggedIn={Boolean(userObj)} \n      userObj={userObj} /> : \"Initializing ...\"}\n      <footer> copy : {new Date().getFullYear()}</footer>\n    </>\n    \n  );\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}